<h1>About</h1>
<p>國立虎尾科技大學機械設計工程系 </p>
<p>National Formosa University  Department of Mechanical Design Engineering</p>
<p>cp2024 計算機程式</p>
<p>課程教材:</p>
<p style="padding-left: 30px;"><a href="https://blog.jupyter.org/introducing-learn-python-with-jupyter-11214f152159">Learn Python with Jupyter</a> (<a href="https://www.learnpythonwithjupyter.com/">site</a>, <a href="https://localhost:9445/downloads/learn_python_with_jupyter.pdf">ebook</a>)</p>
<p style="padding-left: 30px;">教育版帳號 microsoftonline 登入點: <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a></p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入 <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a> Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span class="fui-Text ___vec8h90 fk6fouc f1pbo8a8 f1i3iumi figsok6 fpgzoln f1w7gpdv f6juhto f1mtd64y f1y7q3j9 f2jf649 foxqkq2" data-tid="join-team-code"> <span>fqpabi8</span></span></p>
<p>個人倉儲:<a href="https://github.com/mdecp2024/hw-yoyo77651/">https://github.com/mdecp2024/hw-yoyo77651/</a></p>
<p>個人網站:<a href="https://mdecp2024.github.io/hw-yoyo77651/">https://mdecp2024.github.io/hw-yoyo77651/</a></p>
<p></p>
<p></p>
<h1>Attendance</h1>
<p>出席 (10%) - 自行舉證評分</p>
<p>自行利用 Github commits 提交記錄評分.</p>
<p>________________________________________________________________________________</p>
<p>使用 Codespaces 維護作業倉儲</p>
<p><strong>甚麼是 Codespaces:</strong></p>
<p>       Codespaces 是 GitHub 提供的一個雲端開發環境，允許開發者在瀏覽器中直接編寫、測試和除錯程式碼。它為用戶提供了一個即時的、可客製化的開發環境，具備以下幾個主要特點：</p>
<p> <strong>即時環境</strong>：用戶可以快速啟動一個新的開發環境，而無需在本地安裝軟體或配置環境。</p>
<p> <strong>雲端執行</strong>：所有的編輯和執行都是在雲端完成的，因此可以隨時隨地登入 Github 後使用，只需要一個瀏覽器。</p>
<p> <strong>預設配置</strong>：用戶可以使用預設的開發環境，也可以自定義配置，包括選擇語言、工具和框架 (計算機程式課程採用    Python 程式語言環境, 而且必須利用 pip 安裝執行網頁編輯環境所需模組:  <span data-teams="true"><span class="ui-provider mb mc md me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj" dir="ltr"> pip install flask flask_cors bs4 lxml pelican markdown gevent)。</span></span></p>
<p><strong>與 GitHub 整合</strong>：由於是 GitHub 的一部分，用戶可以直接利用倉儲中 Code 下的 Codespaces 啟動或進入先前已經建立的環境，進行版本控制，無需設定提交帳號與電子郵件等資料或授權管理。</p>
<p>首次建立作業倉儲下的 Codespaces, 必需先在終端機安裝所需模組: pip install flask flask_cors bs4 lxml pelican markdown gevent</p>
<p>接著利用 python main.py 啟動編輯網頁, 以 admin 做為管理者密碼登入後, 可以修改動態網站內容.</p>
<p>動態網站編輯完成後, 必須利用 Convert 功能將動態網站轉為靜態網站內容 (其實就是將 config/config.htm 透過分頁後, 將靜態網頁檔案存入 content 目錄中.</p>
<p> </p>
<p>靜態網頁轉檔完成後, 就可以利用</p>
<p> </p>
<p>git add . </p>
<p> </p>
<p>git commit -m "提交訊息"</p>
<p> </p>
<p>git push</p>
<p> </p>
<p>將改版的作業倉儲內容, 從 Codespaces 環境推送到 Github 倉儲區, 接著 Github Pages 就會根據 Settings - Pages 中的設定, 將 main 分支的資料再經過轉檔, 部署到 Pages 的靜態網站中. 而靜態網站的網址將會是<span> </span><a href="https://mdecp2024.github.io/hw-" rel="noreferrer noopener" target="_blank" title="https://mdecp2024.github.io/hw-">https://mdecp2024.github.io/hw-</a><span> </span>後面接上個使用者的 Github 登入帳號.</p>
<p> </p>
<p>其實, 任何 Github 的倉儲若已經設定 Pages 要求用特定分支作為網頁根目錄, Github Pages 都會使用 https://github帳號.github.io/倉儲名稱 作為轉檔後的倉儲網頁網址</p>
<p><span data-teams="true"><span class="ui-provider mb mc md me mf mg mh mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj" dir="ltr"><span> </span></span></span></p>
<p></p>
<h1>HW 1</h1>
<h4>主題: 基於瀏覽器的分散式版次管理與整合程式開發環境 (10%)<span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;">USB 隨身碟:</p>
<p style="padding-left: 60px;">下載 <a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a> (428 MB, 解開壓縮後約 1.5 GB)</p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cp2024/content/Jupyter.html">Jupyter</a></p>
<p style="padding-left: 30px;">What are Github and Codespaces?</p>
<p style="padding-left: 60px;"><a href="https://docs.github.com/en/get-started/start-your-journey/hello-world">Hello World - GitHub Docs</a></p>
<p style="padding-left: 30px;">利用包含學號的字串作為帳號, 申請免費使用 Github.</p>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 1</p>
<hr/>
<p>PART 1: Creating the basics 資料整理 (10%)</p>
<p>啟動可攜程式系統後, 在命令列中:</p>
<p>y:\&gt;cd notebook</p>
<p>y:\notebook&gt;jupyter lab --collaborative</p>
<p>進入 <a href="/downloads/01_string_input_print.ipynb">01_string_input_print.ipynb</a> 練習如何修改 PART1 notebook 後存檔, 上傳至作業倉儲中的 downloads 目錄後, 透過 <a href="https://nbviewer.org/">https://nbviewer.org/</a> 將已經提交的 <a href="/downloads/01_string_input_print.ipynb">01_string_input_print.ipynb</a>, 嵌入下列網頁中.</p>
<p><iframe height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb" width="600"></iframe></p>
<p>上列 iframe 標註的 html 語法:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"&gt;&lt;/iframe&gt;</pre>
<p>完成上述流程整理後, 請將 HW1 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 1 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 Topic 1 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h3>虛擬機建立</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/jBLQ0giWMv0?si=Akcmc7pYZgrYN7hj" title="YouTube video player" width="560"></iframe></p>
<h3>Brython建立</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/SuI3wQ-Ron4?si=rzSeVCma_K-Wkhqp" title="YouTube video player" width="560"></iframe></p>
<h3>w10</h3>
<p><strong>題目一:</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/gDVEfnzAPSY?si=eWIaZr-C9GVe59u4" title="YouTube video player" width="560"></iframe></p>
<p><span><strong>Brython頁面</strong>:建立好自己的Brython頁面後直接複製</span><span>貼上即可</span></p>
<p><span></span><span><strong>SciTE 編輯器</strong>:新增檔案檔名後一定要加上".py"再複製指令</span></p>
<p><span><strong>命令提示字元視窗</strong>:打開cmd視窗輸入</span></p>
<p><span>                                               cd y: </span></p>
<p><span>                                               cd tmp</span></p>
<p><span>                                               cd python_ex</span></p>
<p><span>                                               python "剛剛儲存的檔名".py</span></p>
<p><span><strong>Jupyter Lab</strong>:先在cmd視窗輸入cd Notebook，再輸入jupyter lab --collaborative</span></p>
<p><span>便可透過瀏覽器打開Jupyter Lab，新增note將指令貼上並按下執行</span></p>
<p><span><strong>Codespaces</strong>:打開Github執行雲端虛擬機Codespaces，安裝python模組</span></p>
<p><span>新增副檔名為.py的檔案並貼上程式碼</span>再輸入python "檔案名稱".py即可完成</p>
<p><strong>題目二:</strong></p>
<p>        <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/kp-YWjOMZ9E?si=QHolKv3hRPnzy5SP" title="YouTube video player" width="560"></iframe></p>
<div>
<div><code><span>name </span><span>=</span><span> </span><span>"41123242"</span></code></div>
<div><code><span>age </span><span>=</span><span> </span><span>20</span></code></div>
<div><code><span>_total </span><span>=</span><span> </span><span>8888</span></code></div>
<div><code><span>score1 </span><span>=</span><span> </span><span>1000000</span></code></div>
<br/>
<div><code><span>print</span><span>(</span><span>"正確的變數:"</span><span>)</span></code></div>
<div><code><span>print</span><span>(</span><span>"name:"</span><span>, name)</span></code></div>
<div><code><span>print</span><span>(</span><span>"age:"</span><span>, age)</span></code></div>
<div><code><span>print</span><span>(</span><span>"_total:"</span><span>, _total)</span></code></div>
<div><code><span>print</span><span>(</span><span>"score1:"</span><span>, score1)</span></code></div>
</div>
<p>執行結果說明：<br/>正確命名：name、age、_total 和 score1 都是有效的變數名稱。<br/>錯誤命名：1name：變數名稱不能以數字開頭。<br/>my-name：變數名稱不能包含 - 符號。<br/>if：不能使用 Python 關鍵字 if 作為變數名稱。</p>
<p><strong>題目三:</strong></p>
<p><br/><b><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Qkym6CRdips?si=t0EMfkoYLnnDWDs0" title="YouTube video player" width="560"></iframe></b></p>
<div>
<div><code><span></span></code></div>
<div><code><span># 已知條件</span></code></div>
<div><code><span>initial_velocity_kmh </span><span>=</span><span> </span><span>310</span><span>  </span><span># 初速度，公里/小時</span></code></div>
<div><code><span>distance </span><span>=</span><span> </span><span>1000</span><span>  </span><span># 跑道距離，公尺</span></code></div>
<br/>
<div><code><span># 將初速度轉換為公尺/秒</span></code></div>
<div><code><span>initial_velocity_ms </span><span>=</span><span> initial_velocity_kmh </span><span>*</span><span> (</span><span>1000</span><span> </span><span>/</span><span> </span><span>3600</span><span>)</span></code></div>
<br/>
<div><code><span># 計算加速度</span></code></div>
<div><code><span>acceleration </span><span>=</span><span> </span><span>-</span><span> (initial_velocity_ms </span><span>**</span><span> </span><span>2</span><span>) </span><span>/</span><span> (</span><span>2</span><span> </span><span>*</span><span> distance)</span></code></div>
<br/>
<div><code><span># 印出結果</span></code></div>
<div><code><span>print</span><span>(</span><span>"所需的加速度為:"</span><span>, acceleration, </span><span>"m/s²"</span><span>)</span></code></div>
</div>
<p><b>心得:</b></p>
<p><b> <em><span style="background-color: #ffffff;">  </span></em></b><em><span style="background-color: #ffffff;">  </span></em><span style="background-color: #ffffff;"> </span><span style="background-color: #ffffff;">透過這門課學習的Python程式讓我可以更了解如何運用Python去解微積分及物理,過程中還遇到一些小地方沒打好的錯誤但最後還是有利用Python解出第一題 A jet touches down at velocity 310 km/h. Find the constant acceleration required to stop the aircraft 1000 m down the runway.以前都不知道要怎麼運用現在終於學會了</span></p>
<h1>HW 2</h1>
<h4>主題: Python 的數列、判斷式與重複迴圈 (20%)<span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 2 and Part 3</p>
<hr/>
<p>延續 HW 1 網頁資料整理與程式練習方法, 整理下列內容 (20%):</p>
<p>PART 2: Introduction to lists and if/else statements</p>
<p>PART 3: Introduction to the for loop</p>
<p>完成上述流程整理後, 請將 HW2 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 2 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>HW 3</h1>
<h4>主題: Python 的數字、演算法與迴圈 (20%)</h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 4 and Part 5</p>
<p>完成上述流程整理後, 請將 HW3 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 3 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 3 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>HW 4</h1>
<h4>主題: 利用 Python 控制機電模擬系統 (20%)</h4>
<p style="padding-left: 30px;">利用 <a href="https://solvespace.com/">https://solvespace.com/</a> 建立機械系統零組件</p>
<p style="padding-left: 30px;">利用 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 建立機電模擬系統</p>
<p style="padding-left: 30px;">利用 <a href="https://manual.coppeliarobotics.com/en/zmqRemoteApiOverview.htm">Python</a> 跨網路控制瀏覽器上的機電模擬系統</p>
<p style="padding-left: 30px;">範例:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 60px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<p>完成上述流程整理後, 請將 HW4 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 4 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 4 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>Final Report</h1>
<p>期末口頭與書面專題報告 (20%)</p>
<p>期末口頭專題報告影片:</p>
<p style="padding-left: 30px;">......</p>
<p>期末書面專題報告檔案 (pdf):</p>
<p style="padding-left: 30px;">......</p>
<p>電腦輔助設計與實習課程總結心得:</p>
<p style="padding-left: 30px;">......</p>
<p>期末報告自評成績:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 Final Report 自評分數輸入 cp2024 自評表單中.</p>
<h1>Brython</h1>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input control-id="ControlID-1" id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input control-id="ControlID-2" onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button control-id="ControlID-5" id="kw_run1">Run</button> <button control-id="ControlID-6" id="kw_show_console1">Output</button> <button control-id="ControlID-7" id="kw_clear_console1">清除輸出區</button><button control-id="ControlID-8" id="clear_bd1">清除繪圖區</button><button control-id="ControlID-9" onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" control-id="ControlID-10" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button control-id="ControlID-11" id="add1to100part2">1 add to 100</button><button control-id="ControlID-12" id="cango_three_gears">cango_three_gears</button><button control-id="ControlID-13" id="bsnake">BSnake</button><button control-id="ControlID-14" id="aitetris">AI Tetris</button><button control-id="ControlID-15" id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input control-id="ControlID-3" id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input control-id="ControlID-4" onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button control-id="ControlID-16" id="kw_run2">Run</button> <button control-id="ControlID-17" id="kw_show_console2">Output</button> <button control-id="ControlID-18" id="kw_clear_console2">清除輸出區</button><button control-id="ControlID-19" id="clear_bd2">清除繪圖區</button><button control-id="ControlID-20" onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" control-id="ControlID-21" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>